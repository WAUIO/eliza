name: Build and Push

on:
  push:
    branches: [wau/develop, main]
    paths:
      - '**'
    #   - '!.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '23.3.0'
      - run: npm install -g pnpm@latest
      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            **/dist
            !**/node_modules/.cache
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - run: pnpm install --frozen-lockfile
      - name: Build packages
        run: pnpm build
        env:
          NODE_ENV: production

      - name: Create artifacts archive
        run: |
          mkdir -p .artifacts
          tar --use-compress-program='pigz --fast' \
            --exclude='node_modules/.cache' \
            -cf .artifacts/build-artifacts.tar.gz \
            $GITHUB_WORKSPACE/node_modules \
            $GITHUB_WORKSPACE/app/build \
            $GITHUB_WORKSPACE/**/dist \
            $GITHUB_WORKSPACE/packages/**/dist \
            $GITHUB_WORKSPACE/packages/**/lib/ \
            $GITHUB_WORKSPACE/packages/**/node_modules/ \
            --ignore-failed-read

      - name: Upload artifacts archive
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: .artifacts/build-artifacts.tar.gz
          retention-days: 1

  docker-images:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [main, client]
    steps:
      - uses: actions/checkout@v4

      - name: Download and extract artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .artifacts

      - name: Extract artifacts
        run: |
          mkdir -p $GITHUB_WORKSPACE
          tar --use-compress-program='pigz -d' \
            -xf .artifacts/build-artifacts.tar.gz \
            -C $GITHUB_WORKSPACE \
            --strip-components=0  # Preserve directory structure
          ls -la $GITHUB_WORKSPACE  # Verify extraction

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Set lowercase owner name
        run: echo "OWNER_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - uses: docker/build-push-action@v4
        with:
          file: Dockerfile.${{ matrix.app }}
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/eliza-${{ matrix.app }}:latest
            ghcr.io/${{ env.OWNER_LC }}/eliza-${{ matrix.app }}:${{ github.sha }}

      - uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            **/dist
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false